{"version":3,"sources":["actions/Actions.js","reducers/ReduceRest.js","reducers/index.js","Components/RestaurantMenu.js","Components/RestaurantView.js","selectors/Selectors.js","containers/SearchRest.js","containers/ContainsRest.js","Components/App.js","index.js"],"names":["fetchDataBegin","type","initialState","restaurants","refine","city","total_items","loading","error","restaurantReducer","state","action","payload","result","total_entries","combineReducers","RestaurantCard","props","restaurant","Card","CardImg","top","width","src","image_url","alt","name","CardBody","CardTitle","CardSubtitle","address","CardText","price","RestaurantList","Row","length","map","Col","sm","md","className","key","id","getVisibleRestaurants","createSelector","filter","toLowerCase","includes","area","SearchRestaurants","onChange","event","setState","target","value","onRefineChange","onFormSubmit","preventDefault","fetchData","Form","onSubmit","this","FormGroup","Label","for","Input","placeholder","Button","color","Component","connect","fetchUrl","dispatch","getState","selectedCity","fetch","then","response","ok","Error","statusText","json","catch","err","RestaurantContainer","message","Container","SearchRest","total","particlesoptions","particles","number","density","enable","value_area","App","params","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"sOAkCaA,EAAiB,iBAAO,CACnCC,KAnCgC,qBCO1BC,EAAe,CACnBC,YAAa,GACbC,OAAQ,GACRC,KAAM,GACNC,YAAa,EACbC,SAAS,EACTC,MAAO,MAwCMC,EArCW,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC1D,OAAQA,EAAOV,MACZ,IDlB2B,mBCmB1B,OAAO,2BACFS,GADL,IAEEH,SAAS,EACTC,MAAO,OAGX,IDxB4B,qBCyB1B,OAAO,2BACFE,GADL,IAEEH,SAAS,EACTJ,YAAaQ,EAAOC,QAAQC,OAAOV,YACnCG,YAAaK,EAAOC,QAAQC,OAAOC,cACnCT,KAAMM,EAAOC,QAAQP,OAGzB,IDhC4B,qBCiC1B,OAAO,2BACFK,GADL,IAEEH,SAAS,EACTC,MAAOG,EAAOH,MACdL,YAAa,KAGjB,IDvCyB,kBCwCvB,OAAO,2BACFO,GADL,IAEEN,OAAQO,EAAOC,UAGnB,QACE,OAAOF,IC7CAK,cAAgB,CAC7BN,sB,wICgBaO,EAlBQ,SAAAC,GACrB,IAAMC,EAAaD,EAAMC,WAEzB,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKL,EAAWM,UAAWC,IAAMP,EAAWQ,OACtE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,gCAAUV,EAAWQ,OAChC,kBAACG,EAAA,EAAD,KAAgBX,EAAWY,QAA3B,IACEZ,EAAWb,KADb,KAEA,kBAAC0B,EAAA,EAAD,eAAmBb,EAAWc,WCOzBC,EAjBQ,SAAAhB,GACrB,OACE,6BACE,kBAACiB,EAAA,EAAD,KACEjB,EAAMd,aAAec,EAAMd,YAAYgC,OAAS,EAClDlB,EAAMd,YAAYiC,KAAI,SAAAlB,GACpB,OACE,kBAACmB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,UAAU,OAAQC,IAAKvB,EAAWwB,IACnD,kBAAC,EAAD,CAAgBxB,WAAYA,QAG7B,mC,QCVEyB,EAAwBC,YACjC,CAHyB,SAAClC,GAAD,OAAWA,EAAMD,kBAAkBL,QADzC,SAACM,GAAD,OAAWA,EAAMD,kBAAkBN,eAKtD,SAAC0C,EAAQ1C,GACP,OAAI0C,GACAA,EAASA,EAAOC,cAEP3C,EAAY0C,QAAO,SAAA3B,GAAU,OAC/BA,EAAWQ,KAAKoB,cAAcC,SAASF,IAAW3B,EAAWY,QAAQgB,cAAcC,SAASF,IAC1F3B,EAAW8B,KAAKF,cAAcC,SAASF,OAI7C1C,K,6CCXP8C,E,kDACF,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IASViC,SAAW,SAAAC,GACP,EAAKC,SAAS,CACV/C,KAAM8C,EAAME,OAAOC,SAZR,EAgBnBC,eAAiB,SAAAJ,GACb,EAAKC,SAAS,CACVhD,OAAQ+C,EAAME,OAAOC,SAlBV,EAsBnBE,aAAe,SAAAL,GACXA,EAAMM,iBAED,EAAK/C,MAAML,MAKZ,EAAK+C,SAAS,CACV5C,MAAO,KAGX,EAAKS,MAAMyC,UAAU,EAAKhD,MAAML,KAAM,EAAKK,MAAMN,SARjD,EAAKgD,SAAS,CACV5C,MAAO,8BAxBf,EAAKE,MAAQ,CACTL,KAAM,GACNG,MAAO,GACPJ,OAAQ,IANG,E,qDAuCf,OACI,kBAAC8B,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACsB,EAAA,EAAD,CAAMC,SAAUC,KAAKL,aAAchB,UAAU,wBACzC,kBAACsB,EAAA,EAAD,CAAWtB,UAAU,mBACjB,kBAACuB,EAAA,EAAD,CAAOvB,UAAU,UAAUwB,IAAI,YAA/B,QACA,kBAACC,EAAA,EAAD,CACIhE,KAAK,OACLyB,KAAK,WACLc,UAAU,IACV0B,YAAY,OACZhB,SAAUW,KAAKX,SACfI,MAAOO,KAAKnD,MAAML,QAK1B,kBAACyD,EAAA,EAAD,CAAWtB,UAAU,mBACjB,kBAACuB,EAAA,EAAD,CAAOvB,UAAU,UAAUwB,IAAI,UAA/B,yBACA,kBAACC,EAAA,EAAD,CACIhE,KAAK,OACLyB,KAAK,SACLc,UAAU,IACV0B,YAAY,wBACZhB,SAAUW,KAAKN,eACfD,MAAOO,KAAKnD,MAAMN,UAI1B,kBAAC+D,EAAA,EAAD,CACE3B,UAAU,KAAK4B,MAAM,WADvB,UAKCP,KAAKnD,MAAMF,MAAQ,uBAAGgC,UAAU,eAAeqB,KAAKnD,MAAMF,OAAa,Y,GA1E5D6D,aAwFjBC,eANS,SAAC5D,GACrB,MAAO,CACLL,KAAMK,EAAMD,kBAAkBJ,QAII,CAAEqD,UNzFjB,SAACrD,EAAMD,GAC5B,IAAMmE,EAAQ,+DAA2DlE,EAA3D,kBAEd,OAAO,SAACmE,EAAUC,GACd,IAAMC,EAAeD,IAAWhE,kBAAkBJ,KAIlD,GAFAmE,EAAS,CAAEvE,KARY,kBAQWW,QAASR,IAEvCC,IAASqE,EAGT,OAFAF,EAASxE,KAEF2E,MAAMJ,GACVK,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,YAG7B,OAAOH,EAASI,UAEjBL,MAAK,SAAA/D,GACJ2D,EAAS,CAAEvE,KAxBO,qBAwBmBW,QAAS,CAAEC,SAAQR,aAEzD6E,OAAM,SAAAC,GACLX,EAAS,CAAEvE,KA1BO,qBA0BmBO,MAAO2E,UMkE7Cb,CAAwCrB,G,SCvFjDmC,E,uKAEF,OAAIvB,KAAK5C,MAAMT,MACN,uCAAaqD,KAAK5C,MAAMT,MAAM6E,SAIrC,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAD,MAEE1B,KAAK5C,MAAMV,QAAU,sCAAiB,KACxC,2CAAkBsD,KAAK5C,MAAMb,OAASyD,KAAK5C,MAAMd,YAAYgC,OAAS0B,KAAK5C,MAAMuE,OACjF,kBAAC,EAAD,CAAgBrF,YAAa0D,KAAK5C,MAAMd,oB,GAbhBkE,aA8BnBC,eAVS,SAAC5D,GACvB,MAAO,CACLP,YAAawC,EAAsBjC,GACnCN,OAAQM,EAAMD,kBAAkBL,OAChCoF,MAAO9E,EAAMD,kBAAkBH,YAC/BE,MAAOE,EAAMD,kBAAkBD,MAC/BD,QAASG,EAAMD,kBAAkBF,WAIG,KAAzB+D,CAA+Bc,GC5BxCK,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACNrC,MAAO,IACPsC,QAAS,CACPC,QAAQ,EACRC,WAAY,QAwBLC,E,uKAdX,OACA,yBAAKvD,UAAU,OACb,kBAAC,IAAD,CAAWA,UAAU,YACnBwD,OAAQP,IAER,4BAASjD,UAAU,cACjB,wBAAIA,UAAU,aAAd,8CAEL,kBAAC,EAAD,W,GAZc6B,aCRb4B,G,OAAQC,YACZC,EACAC,YAAgBC,OAGlBC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,U","file":"static/js/main.71425222.chunk.js","sourcesContent":["export const FETCH_DATA_BEGIN   = 'FETCH_DATA_BEGIN';\r\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\r\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\r\nexport const ADD_REFINE_DATA = 'ADD_REFINE_DATA';\r\n\r\nexport const fetchData = (city, refine) => {\r\n    const fetchUrl = `https://opentable.herokuapp.com/api/restaurants?city=${city}&&per_page=100`;\r\n\r\n    return (dispatch, getState) => {\r\n        const selectedCity = getState().restaurantReducer.city;\r\n\r\n        dispatch({ type: ADD_REFINE_DATA, payload: refine });\r\n        \r\n        if (city !== selectedCity) {\r\n            dispatch(fetchDataBegin());\r\n\r\n            return fetch(fetchUrl)\r\n              .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText)\r\n                }\r\n\r\n                return response.json();\r\n              })\r\n              .then(result => {\r\n                dispatch({ type: FETCH_DATA_SUCCESS, payload: { result, city } });\r\n              })\r\n              .catch(err => {\r\n                dispatch({ type: FETCH_DATA_FAILURE, error: err })\r\n              })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchDataBegin = () => ({\r\n  type: FETCH_DATA_BEGIN\r\n});\r\n\r\nexport const fetchDataSuccess = DATA => ({\r\n  type: FETCH_DATA_SUCCESS,\r\n  payload: { DATA }\r\n});\r\n\r\nexport const fetchDataFailure = error => ({\r\n  type: FETCH_DATA_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nexport const addRefineData = refine => ({\r\n  type: ADD_REFINE_DATA,\r\n  payload: { refine }\r\n});","import {\r\n    FETCH_DATA_BEGIN,\r\n    FETCH_DATA_SUCCESS,\r\n    FETCH_DATA_FAILURE,\r\n    ADD_REFINE_DATA\r\n  } from '../actions/Actions';\r\n  \r\n  const initialState = {\r\n    restaurants: [],\r\n    refine: '',\r\n    city: '',\r\n    total_items: 0,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  const restaurantReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n       case FETCH_DATA_BEGIN:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null\r\n        };\r\n  \r\n      case FETCH_DATA_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          restaurants: action.payload.result.restaurants,\r\n          total_items: action.payload.result.total_entries,\r\n          city: action.payload.city\r\n        };\r\n  \r\n      case FETCH_DATA_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.error,\r\n          restaurants: []\r\n        };\r\n  \r\n      case ADD_REFINE_DATA: \r\n        return {\r\n          ...state,\r\n          refine: action.payload\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default restaurantReducer;","\r\nimport { combineReducers } from 'redux'\r\nimport restaurantReducer from './ReduceRest'\r\n\r\nexport default combineReducers({\r\n  restaurantReducer\r\n}) \r\n \r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nconst RestaurantCard = props => {\r\n  const restaurant = props.restaurant;\r\n\r\n  return(\r\n    <div>\r\n      <Card>\r\n        <CardImg top width=\"100%\" src={restaurant.image_url} alt={ restaurant.name } />\r\n        <CardBody>\r\n          <CardTitle><strong>{ restaurant.name }</strong></CardTitle>\r\n          <CardSubtitle>{ restaurant.address }, \r\n          { restaurant.city } </CardSubtitle>\r\n          <CardText>Price: { restaurant.price }</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantCard;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport RestaurantCard from './RestaurantMenu';\r\n\r\nconst RestaurantList = props => {\r\n  return(\r\n    <div>\r\n      <Row>\r\n      { props.restaurants && props.restaurants.length > 0 ? \r\n      props.restaurants.map(restaurant => {\r\n        return (\r\n          <Col sm=\"6\" md=\"4\" className=\"mb-5\"  key={restaurant.id}>\r\n            <RestaurantCard restaurant={restaurant} />\r\n          </Col>\r\n        )\r\n      }) : 'Please refine the restaurants' }\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantList;","import { createSelector } from 'reselect'\r\n\r\nconst getRestaurants = (state) => state.restaurantReducer.restaurants;\r\nconst getRestaurantsFilter = (state) => state.restaurantReducer.refine;\r\n\r\nexport const getVisibleRestaurants = createSelector(\r\n    [getRestaurantsFilter, getRestaurants],\r\n    (filter, restaurants) => {\r\n      if (filter) {\r\n          filter = filter.toLowerCase();\r\n\r\n            return restaurants.filter(restaurant => \r\n                (restaurant.name.toLowerCase().includes(filter) || restaurant.address.toLowerCase().includes(filter)\r\n                || restaurant.area.toLowerCase().includes(filter))\r\n            )\r\n      }\r\n\r\n      return restaurants;\r\n    }\r\n)","import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { fetchData } from '../actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport './Rest.css';\r\n\r\nclass SearchRestaurants extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            city: '',\r\n            error: '',\r\n            refine: ''\r\n        }\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({\r\n            city: event.target.value\r\n        })\r\n    };\r\n\r\n    onRefineChange = event => {\r\n        this.setState({\r\n            refine: event.target.value\r\n        })\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.city) {\r\n            this.setState({\r\n                error: 'Please enter a city name'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: ''\r\n            })\r\n            \r\n            this.props.fetchData(this.state.city, this.state.refine);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n              <Col>\r\n                <Form onSubmit={this.onFormSubmit} className=\"form-inline row mt-5\">\r\n                    <FormGroup className=\"col-12 col-md-4\">\r\n                        <Label className=\"sr-only\" for=\"cityName\">City</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"cityName\"\r\n                            className=\"a\"\r\n                            placeholder=\"City\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.city}\r\n                            \r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"col-12 col-md-4\">\r\n                        <Label className=\"sr-only\" for=\"refine\">Address, Name or Area</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"refine\"\r\n                            className=\"b\"\r\n                            placeholder=\"Address, Name or Area\"\r\n                            onChange={this.onRefineChange}\r\n                            value={this.state.refine}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <Button\r\n                      className=\"Bu\" color=\"primary\">\r\n                        Search\r\n                    </Button>\r\n\r\n                    {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\r\n                </Form>\r\n            </Col>\r\n          </Row>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n      city: state.restaurantReducer.city,\r\n    } \r\n}\r\n  \r\nexport default connect(mapStatetoProps, { fetchData })(SearchRestaurants);","import React, { Component } from 'react';\r\nimport RestaurantList from '../Components/RestaurantView';\r\nimport { connect } from 'react-redux';\r\nimport { getVisibleRestaurants } from '../selectors/Selectors';\r\nimport SearchRestaurants from './SearchRest';\r\nimport { Container } from 'reactstrap';\r\n\r\nclass RestaurantContainer extends Component {\r\n  render() {\r\n    if (this.props.error) {\r\n      return <div>Error! {this.props.error.message}</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <SearchRestaurants />\r\n\r\n          { this.props.loading ? <p>Loading</p> : null }\r\n          <p>Total items: { this.props.refine ? this.props.restaurants.length : this.props.total }</p> \r\n          <RestaurantList restaurants={this.props.restaurants} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    restaurants: getVisibleRestaurants(state),\r\n    refine: state.restaurantReducer.refine,\r\n    total: state.restaurantReducer.total_items,\r\n    error: state.restaurantReducer.error,\r\n    loading: state.restaurantReducer.loading\r\n  } \r\n}\r\n\r\nexport default connect(mapStatetoProps, null)(RestaurantContainer);","import React , {Component} from 'react';\nimport '../containers/Rest.css';\nimport './App.css';\n\nimport Particles from 'react-particles-js';\nimport RestaurantContainer from '../containers/ContainsRest';\n\n\n\nconst particlesoptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n  \n    }\n  }\n}\n}\nclass  App extends Component   {\n \n  render() {\n\n    return (\n    <div className=\"App\">\n      <Particles className='particles'\n        params={particlesoptions} />\n    \n        <header  className=\"App-header\">\n          <h1 className=\"App-title\">Carve For Food Find Near by  Restaurants </h1>\n        </header>\n     <RestaurantContainer />\n  </div>\n    );\n    }\n  }\n   \nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import registerServiceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nimport App from './Components/App';\r\nimport './index.css';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}